"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _State:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _StateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_State.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CPU_DeepSleep: _State.ValueType  # 1
    CPU_Sleep: _State.ValueType  # 2
    CPU_Awake: _State.ValueType  # 4
    Lora_RXOn: _State.ValueType  # 8
    Lora_TXOn: _State.ValueType  # 16
    Lora_RXActive: _State.ValueType  # 32
    BT_On: _State.ValueType  # 64
    LED_On: _State.ValueType  # 128
    Screen_On: _State.ValueType  # 256
    Screen_Drawing: _State.ValueType  # 512
    Wifi_On: _State.ValueType  # 1024
    GPS_LowPower: _State.ValueType  # 2048
    GPS_MediumPower: _State.ValueType  # 4096
    GPS_HighPower: _State.ValueType  # 8192

class State(_State, metaclass=_StateEnumTypeWrapper):
    """Any significant power changing event in meshtastic should be tagged with a powermon state transition.
    If you are making new meshtastic features feel free to add new entries at the end of this definition.
    """

CPU_DeepSleep: State.ValueType  # 1
CPU_Sleep: State.ValueType  # 2
CPU_Awake: State.ValueType  # 4
Lora_RXOn: State.ValueType  # 8
Lora_TXOn: State.ValueType  # 16
Lora_RXActive: State.ValueType  # 32
BT_On: State.ValueType  # 64
LED_On: State.ValueType  # 128
Screen_On: State.ValueType  # 256
Screen_Drawing: State.ValueType  # 512
Wifi_On: State.ValueType  # 1024
GPS_LowPower: State.ValueType  # 2048
GPS_MediumPower: State.ValueType  # 4096
GPS_HighPower: State.ValueType  # 8192
global___State = State

@typing.final
class Event(google.protobuf.message.Message):
    """
    the log messages will be short and complete (see PowerMon.Event in the protobufs for details). 
    something like "PwrMon,C,0x00001234,REASON" where the hex number is the bitmask of all current states. 
    (We use a bitmask for states so that if a log message gets lost it won't be fatal)
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATES_FIELD_NUMBER: builtins.int
    states: builtins.int
    """Bitwise-OR of States"""
    def __init__(
        self,
        *,
        states: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_states", b"_states", "states", b"states"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_states", b"_states", "states", b"states"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_states", b"_states"]) -> typing.Literal["states"] | None: ...

global___Event = Event
